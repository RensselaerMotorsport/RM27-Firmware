local h = CanComms.TxOpen(true);

if (CAN Bus neq CAN Bus.Not in Use)
{
	local ok = true;
	local bus = CAN Bus.AsInteger() - 1;

	CanComms.TxInitialise(h, 8);
	CanComms.SetUnsignedInteger	(h,  0, 16, Convert.ToUnsignedInteger(Motor.Water.Motor Outlet.Temperature + 40));
	CanComms.SetUnsignedInteger	(h, 16, 16, Convert.ToUnsignedInteger(Motor.Water.Motor Inlet.Temperature + 40));
	//CanComms.SetUnsignedInteger	(h, 32, 16, Convert.ToUnsignedInteger(Engine.Oil.Block.Temperature + 40));
	//CanComms.SetUnsignedInteger	(h, 48, 16, Convert.ToUnsignedInteger(Engine.Fuel.Temperature + 40));
	ok = CanComms.TxStandard(h, bus, 0x641);
	
	CanComms.TxInitialise(h, 8);
	CanComms.SetUnsignedInteger	(h,  0, 16, Convert.ToUnsignedInteger(ECU.Logging.Used * 1.0e3));
	//CanComms.SetUnsignedInteger	(h, 16,  8, Convert.ToUnsignedInteger(Engine.Start.Relay.State.AsInteger()));
	//CanComms.SetInteger			(h, 32,  8, Engine.Gearbox.Clutch.State.AsInteger());
	//CanComms.SetUnsignedInteger	(h, 48, 16, Convert.ToUnsignedInteger(Engine.Fuel.Used * 1.0e5));	
	ok = CanComms.TxStandard(h, bus, 0x644);

	CanComms.TxInitialise(h, 8);
	CanComms.SetInteger			(h,  8,  8, 0);
	CanComms.SetUnsignedInteger	(h, 16,  8, Convert.ToUnsignedInteger(ECU.Communication.PDM.Receive.Total Current * 2.0));
	CanComms.SetUnsignedInteger	(h, 24,  8, Convert.ToUnsignedInteger(ECU.Communication.PDM.Receive.Battery Voltage * 1.0e1));
	CanComms.SetUnsignedInteger	(h, 32, 16, Convert.ToUnsignedInteger(ECU.Communication.PDM.Receive.Internal Temperature));
	CanComms.SetUnsignedInteger	(h, 48, 16, Convert.ToUnsignedInteger(ECU.Temperature * 1.0e1));
	ok = CanComms.TxStandard(h, bus, 0x648);

	/*
	* Shut up build
	*/
	ok = ok;
}

